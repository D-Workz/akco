@prefix : <https://d-workz.github.io/hkco/#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix xml: <http://www.w3.org/XML/1998/namespace> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix cube: <http://purl.org/linked-data/cube#> .
@prefix dqv: <http://www.w3.org/ns/dqv#> .
@base <https://d-workz.github.io/hkco/#> .

<https://d-workz.github.io/hkco/> rdf:type owl:Ontology ;
                                             owl:imports "http://purl.org/dc/terms" ,
                                                         "http://www.w3.org/ns/dqv#",
                                                         "http://purl.org/linked-data/cube#";
                                             <http://purl.org/dc/elements/1.1/creator> "Dennis Sommer" ;
                                             <http://purl.org/dc/elements/1.1/rights> "https://creativecommons.org/licenses/by/4.0/"@en ;
                                             <http://purl.org/dc/elements/1.1/source> "https://d-workz.github.io/hkco/"@en ;
                                             <http://purl.org/dc/elements/1.1/title> "Holistic Knowledge Cleaning Ontology (HKCO)"@en ;
                                             rdfs:comment """The holistic knowledge cleaning ontology represents important features of knowledge cleaning. These features include knowledge cleaning approaches, techniques and backgroundknowledge. It aims to provide the context from which knowledge cleaning can be performed.

The ontology proviedes means to select approaches for a custom cleaning process, depending on for example, the knowledge graph and available additional cleaning sources. After the selection the approaches need to be applied, this application is represented by the Application algorithm and logic classes."""@en .


#################################################################
#    Object Properties
#################################################################

###  https://d-workz.github.io/hkco/#followedTask
:followedTask rdf:type owl:ObjectProperty ;
              rdfs:domain :ApplicationCondition ;
              rdfs:range :ApplicationTask ;
              rdfs:comment "This is the property that is executed if the condition is fullfilled."@en ;
              rdfs:label "followedTask"@en .


###  https://d-workz.github.io/hkco/#hasCondition
:hasCondition rdf:type owl:ObjectProperty ;
              rdfs:domain :ApplicationCondition ;
              rdfs:range :Condition ;
              rdfs:comment "This property connexts the results of the performed application task, to the following processing."@en ;
              rdfs:label "hasCondition"@en .


###  https://d-workz.github.io/hkco/#hasDimension
:hasDimension rdf:type owl:ObjectProperty ;
              rdfs:domain :ApplicationTask ,
                          :Approach ,
                          :Technique ;
              rdfs:range :Dimension ;
              rdfs:comment "Approaches and Techniques have different dimensions, i.e., characteristics. This property defines those dimensions."@en ;
              rdfs:label "hasDimension"@en .


###  https://d-workz.github.io/hkco/#hasError
:hasError rdf:type owl:ObjectProperty ;
          rdfs:domain :KnowledgeGraph ;
          rdfs:range :Error ;
          rdfs:comment "A knowledge graph can have certain types of errors. These errors need to be targeted by the cleaning process."@en ;
          rdfs:label "hasError"@en .


###  https://d-workz.github.io/hkco/#implements
:implements rdf:type owl:ObjectProperty ;
            rdfs:domain :Approach ;
            rdfs:range :Technique ;
            rdfs:comment "An approaches implements specific cleaning techniques. This property defines those used/implemented techniques."@en ;
            rdfs:label "implements"@en .


###  https://d-workz.github.io/hkco/#isPublished
:isPublished rdf:type owl:ObjectProperty ;
             rdfs:domain :Approach ;
             rdfs:range <http://purl.org/dc/terms/BibliographicResource> ;
             rdfs:comment "An approach is published inside a publication. This property defines this publication, which is of type BibliographicResource from dcterms vocabulary."@en ;
             rdfs:label "isPublished"@en .


###  https://d-workz.github.io/hkco/#performsTask
:performsTask rdf:type owl:ObjectProperty ;
              rdfs:domain :ApplicationAlgorithm ;
              rdfs:range :ApplicationTask ;
              rdfs:comment "An application logic esecutes or performs a specific task. This task is defined here."@en ;
              rdfs:label "performsTask"@en .


###  https://d-workz.github.io/hkco/#requiresQuality
:requiresQuality rdf:type owl:ObjectProperty ;
                 rdfs:domain :Dimension ;
                 rdfs:range <http://www.w3.org/ns/dqv#QualityMeasurement> ;
                 rdfs:comment "The dimensions of approaches and techniques, determines certain characteristics of the cleaning process. This process is dependent on specific aspects of the used background knowledge or knowledge graph. These aspects are related to the quality of the used source."@en ;
                 rdfs:label "requiresQuality"@en .


###  https://d-workz.github.io/hkco/targetsError
:targetsError rdf:type owl:ObjectProperty ;
              rdfs:domain :Dimension ;
              rdfs:range :Error ;
              rdfs:comment "One of the dimensions of an approach or  technique is the exact type of error it procecces. Therefore a dimension such as \"TargetedError\" could use this property, to represent this focus."@en ;
              rdfs:label "targetsError"@en .


###  https://d-workz.github.io/hkco/#usesBackgroundKnowledge
:usesBackgroundKnowledge rdf:type owl:ObjectProperty ;
                         rdfs:domain :Technique ;
                         rdfs:range :BackgroundKnowledge ;
                         rdfs:comment "Any cleaning technique uses a certain type of background knowledge. It is used as a context from which the processing is performed."@en ;
                         rdfs:label "usesBackgroundKnowledge"@en .


#################################################################
#    Data properties
#################################################################

###  https://d-workz.github.io/hkco/#errorNature
:errorNature rdf:type owl:DatatypeProperty ;
             rdfs:domain :Error ;
             rdfs:range xsd:string ;
             rdfs:comment "The nature of an error- An error can be semantic or syntatic. A semantic error causes the error source to express wrong semantics (meaning). A syntatic error causes the error source to express no or wrong semantics."@en ;
             rdfs:label "errorNature"@en .


###  https://d-workz.github.io/hkco/#errorSource
:errorSource rdf:type owl:DatatypeProperty ;
             rdfs:domain :Error ;
             rdfs:range xsd:string ;
             rdfs:comment "The error source, in which an error originates. It is an assertion type, for example a wrong instance or property-value assertion."@en ;
             rdfs:label "errorSource"@en .


###  https://d-workz.github.io/hkco/#errorType
:errorType rdf:type owl:DatatypeProperty ;
           rdfs:domain :Error ;
           rdfs:range xsd:string ;
           rdfs:comment "The error type is a specific error in an error source, caused by a certain type of error nature. For example, an instance assertion might have a syntatically wrong instance identifier or a syntatically wrong type name."@en ;
           rdfs:label "errorType"@en .



###  https://d-workz.github.io/hkco/#logicCondition
:logicCondition rdf:type owl:DatatypeProperty ;
                rdfs:domain :Condition ;
                rdfs:range xsd:string ;
                rdfs:comment "A logic Condition that must be fulfilled for the next logic step to be executed."@en ;
                rdfs:label "logicCondition"@en .


###  https://d-workz.github.io/hkco/#taskInput
:taskInput rdf:type owl:DatatypeProperty ;
           rdfs:domain :ApplicationTask ;
           rdfs:range xsd:string ;
           rdfs:comment "An application task needs to be implemented using an approach. These approaches use an input, which is this property and compute an output, based on the performed task."@en ;
           rdfs:label "taskInput"@en .


###  https://d-workz.github.io/hkco/#taskOutput
:taskOutput rdf:type owl:DatatypeProperty ;
            rdfs:domain :ApplicationTask ;
            rdfs:range xsd:string ;
            rdfs:comment "An application task needs to be implemented using an approach. These approaches have an output, which is defined with this property. This output is based on the input and the performed task."@en ;
            rdfs:label "taskOutput"@en .


#################################################################
#    Classes
#################################################################


###  https://d-workz.github.io/hkco/#ApplicationAlgorithm
:ApplicationAlgorithm rdf:type owl:Class ;
                      rdfs:comment "An application algorithm structures the processing of detected errors. It represents this process, using an array of application logic. The order of the elements refers to the order of their execution."@en ;
                      rdfs:label "ApplicationAlgorithm"@en .


###  https://d-workz.github.io/hkco/#ApplicationCondition
:ApplicationCondition rdf:type owl:Class ;
                      rdfs:subClassOf :ApplicationTask ;
                      rdfs:comment "An application condition is a subclass of an application logic. It contains a condition that needs to be fulfilled for an application task to be executed."@en ;
                      rdfs:label "AnnotationCondition" .


###  https://d-workz.github.io/hkco/#ApplicationTask
:ApplicationTask rdf:type owl:Class ;
                 rdfs:comment "An application task needs to be implemented using an approach. These approaches have a certain input, output and task, for example, error detection or correction."@en ;
                 rdfs:label "ApplicationTask"@en .


###  https://d-workz.github.io/hkco/#Approach
:Approach rdf:type owl:Class ;
          rdfs:comment "Approaches are implementations of cleaning tasks. These implementations have dimensions, i.e., characterostics and use a cleaning technique for processing the task. The approaches are described inside publications and optionally provide an implementation."@en ;
          rdfs:label "Approach"@en .


###  https://d-workz.github.io/hkco/#BackgroundKnowledge
:BackgroundKnowledge rdf:type owl:Class ;
                     rdfs:subClassOf <http://purl.org/linked-data/cube#DataSet> ;
                     rdfs:comment "Background Knowledge is required as a context from which a cleaning task is performed. The context is used to either determine the correctness of an assertion, i.e., for error detection, or it provides the knowledge for an correction."@en ;
                     rdfs:label "BackgroundKnowledge"@en .


###  https://d-workz.github.io/hkco/#Condition
:Condition rdf:type owl:Class ;
           rdfs:comment "A conditional logic step that guides the process, depending on the condtitions."@en ;
           rdfs:label "Condition"@en .


###  https://d-workz.github.io/hkco/#Dimension
:Dimension rdf:type owl:Class ;
           rdfs:comment "A dimension is a characteristic of a cleaning approach or technique. These dimension can, for example, represent if additional sources are used for processing, i.e., an external method, or if only the given knowledge graph is used, i.e., an internal method."@en ;
           rdfs:label "Dimension"@en .


###  https://d-workz.github.io/hkco/#Error
:Error rdf:type owl:Class ;
       rdfs:comment "An error is an assertion that is incorrect. The error source, identifies which type of assertion is wrong. Additionally, the error nature identifies if the error is semantic or syntactic. The error type is a specific error, caused by the error nature inside the error source."@en ;
       rdfs:label "Error"@en .


###  https://d-workz.github.io/hkco/#KnowledgeGraph
:KnowledgeGraph rdf:type owl:Class ;
                rdfs:subClassOf :BackgroundKnowledge ;
                rdfs:comment "A knowledge graph is the central data structure that is processed. It is a semantic network, also known as a knowledge base. It represents any domain and structures knowledge in a machine processable manner."@en ;
                rdfs:label "KnowledgeGraph"@en .


###  https://d-workz.github.io/hkco/#Technique
:Technique rdf:type owl:Class ;
           rdfs:comment "An approach uses a cleaning technique to perform a cleaning task, i.e., error detection or correction. The technique uses different types of background knowledge as a context. The techniques differ in this background knowledge and how they access the background knowledge. Resulting in different dimensions."@en ;
           rdfs:label "Technique"@en .
